url.data <- "https://docs.google.com/spreadsheets/d/1hWyDiPwVU1oUflqVSC6iSveP-NigMpZhh9e7RKXZpJk/pub?output=csv"
library(RCurl)
library(rmarkdown)
library(yaml)
# Carga de los datos
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
View(data)
headers <- gsub(".", " ", names(data), fixed=T)
headers
x = data[1]
x
x = data[1,]
x
paste(gsub(" ", "-", tolower(x[2])), ".Rmd", sep="")
x = data[2,]
paste(gsub(" ", "-", tolower(x[2])), ".Rmd", sep="")
iconv(x, to='ASCII//TRANSLIT')
iconv(x[2], to='ASCII//TRANSLIT')
x[2]
x[9]
x = data[1,]
x[9]
x = data[5,]
x[9]
is.Null(x[9])
is.null(x[9])
x[9]==""
source('/media/alf/datos/web/catalogo-patrimonio/generar_catalogo.R', echo=TRUE)
source('/media/alf/datos/web/catalogo-patrimonio/generar_catalogo.R', echo=TRUE)
render.record(x)
file.name <- paste(gsub(" ", "-", tolower(iconv(x[2], to='ASCII//TRANSLIT'))), ".Rmd", sep="")
file.name
file.create(file.name)
file.name <- paste("lugares/", gsub(" ", "-", tolower(iconv(x[2], to='ASCII//TRANSLIT'))), ".Rmd", sep="")
file.create(file.name)
if (x[9]!="") img = paste("/img/", x[9], sep="") else img="img/fondo.jgp"
img
if (x[9]!="") img = paste("/img/", x[9], sep="") else img="/img/fondo.jgp"
yamlheader <- as.yaml(list(layout="page", title=as.character(x[2]), headerimg=img, categories=as.character(x[7]), comments="true"))
yamlheader
yamlheader <- as.yaml(list(layout="page", title=as.character(x[2]), headerimg=img, categories=as.character(x[7]), comments=as.character("true")))
yamlheader
cat(yamlheader)
yamlheader <- as.yaml(list(layout="page", title=as.character(x[2]), "header-img"=img, categories=as.character(x[7]), comments=as.character("true")))
cat(yamlheader)
write(paste("---\n", yamlheader,"---\n\n", sep=""), file=file.name, append=T)
file.name <- paste("lugares/", gsub(" ", "-", tolower(iconv(x[2], to='ASCII//TRANSLIT'))), ".md", sep="")
file.create(file.name)
if (x[9]!="") img = paste("/img/", x[9], sep="") else img="/img/fondo.jgp"
yamlheader <- as.yaml(list(layout="page", title=as.character(x[2]), "header-img"=img, categories=as.character(x[7]), comments=as.character("true")))
write(paste("---\n", yamlheader,"---\n\n", sep=""), file=file.name, append=T)
write(x[6], file=file.name, append=T)
x[6]
file.name <- paste("lugares/", gsub(" ", "-", tolower(iconv(x[2], to='ASCII//TRANSLIT'))), ".md", sep="")
file.create(file.name)
if (x[9]!="") img = paste("/img/", x[9], sep="") else img="/img/fondo.jgp"
yamlheader <- as.yaml(list(layout="page", title=as.character(x[2]), "header-img"=img, categories=as.character(x[7]), comments=as.character("true")))
write(paste("---\n", yamlheader,"---\n\n", sep=""), file=file.name, append=T)
write(x[5], file=file.name, append=T)
write(unlist(x[5]), file=file.name, append=T)
source('/media/alf/datos/web/catalogo-patrimonio/generar_catalogo.R', echo=TRUE)
render.record(x)
x[9]
y = "uno, dos, tres"
strsplit(y, ",")
?download.file
url.data <- "https://docs.google.com/spreadsheets/d/1hWyDiPwVU1oUflqVSC6iSveP-NigMpZhh9e7RKXZpJk/pub?output=csv"
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
x= data[25,]
x
name <- gsub(" ", "-", tolower(iconv(x[2], to='ASCII//TRANSLIT')))
name
file.name <- paste("lugares/", name, ".md", sep="")
file.create(file.name)
# Descargar fotos
url.photos <- strsplit(x[9], ",")
x[9]รง
x[9]
x[,9]
url.photos <- strsplit(x[,9], ",")
for (i in length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photo[i], photos[i], mode="wb")
}
photos
photos <- NULL
for (i in length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photo[i], photos[i], mode="wb")
}
for (i in length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], mode="wb")
}
url.photos
url.photos[1]
url.photos <- unlist(strsplit(x[,9], ","))
photos <- NULL
url.photos
for (i in length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], mode="wb")
}
url.photos <- trimws(unlist(strsplit(x[,9], ",")))
url.photos
photos <- NULL
for (i in length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], mode="wb")
}
download.file("https://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg")
?download.file
download.file("https://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", method="auto")
download.file("http://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", method="auto")
download.file("http://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", method="w")
download.file("https://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", method="w")
photos <- NULL
for (i in length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], mode="w")
}
download.file("https://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", method="w")
download.file("https://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", method="wb")
download.file("https://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", mode="w")
download.file("https://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", mode="wb")
download.file("https://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", mode="wb", method="auto")
download.file("https://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", mode="wb", method="wget")
download.file("https://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", mode="w", method="wget")
download.file("https://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", mode="w", method="libcurl")
download.file("https://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", mode="w", method="curl")
download.file("https://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", mode="w", method="internal")
download.file("http://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", mode="w", method="internal")
download.file("http://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", mode="w", method="curl")
download.file("http://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", mode="w", method="wget")
download.file("https://8b978dafd7cbb0236a14fd91743be8b624061489.googledrive.com/secure/AHqL5N1nOlt2Gh98PiCXkG35VNI8ZJAuoZXUmESlnDuqkqYkeVmnjzVUg_-TxvbjCjr48-lkguslMGIvajR-WrK7wH1RvRUErtb_VQSXT2mccJHjVK5TjxfMsWrUgrha5bpvmxEKU4001Lwhxjr-ZgSwGFz4KfG-jWEM3GNDsm9SIHHugjzes0l5zwr3Gn5lJZsVzxqc3ptcG_e-2bpVaSLf-CSQyhem32G7BKJmfOWIEX9Dq4PCO4R8BJFod2ie_c05eYinzMyBwJsZ-aAqZZAXF3hdWwCWMcekKupdx_YJ_nDY0JOI3hHixC0zQrZGxL3Z1b95zVsFrEUwOEtX_j01dKk_YvQ_wp30JNwAWlzAmNPME68Z6RA5tYfygBFCtpW7YMdk9cDJmgJmElUBJTCTvAPZz9OaMfaT5YecFiSxCq9x1yVmnQZzWxPF9vK9AftJ1PKJifwbWMbu_js5kTUqThMMNIIyeuIhSGatTbmPOenRIOsi24HOvTrGa5zEX1RKKnwr1xsdwBELVHfu9fFySA4Q_TOfs9eQssWpKtADAudNLKE5e3pALPwy0U6ongPJFvFnqqSy8BCkQ8WBSmzl4jsWq3sVstiwHYcz8GQyfyhZfKZ5sDA=/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo%20de%20Nieve_2007%20W.jpg", "prueba.jpg", mode="w", method="wget")
download.file("https://8b978dafd7cbb0236a14fd91743be8b624061489.googledrive.com/secure/AHqL5N1nOlt2Gh98PiCXkG35VNI8ZJAuoZXUmESlnDuqkqYkeVmnjzVUg_-TxvbjCjr48-lkguslMGIvajR-WrK7wH1RvRUErtb_VQSXT2mccJHjVK5TjxfMsWrUgrha5bpvmxEKU4001Lwhxjr-ZgSwGFz4KfG-jWEM3GNDsm9SIHHugjzes0l5zwr3Gn5lJZsVzxqc3ptcG_e-2bpVaSLf-CSQyhem32G7BKJmfOWIEX9Dq4PCO4R8BJFod2ie_c05eYinzMyBwJsZ-aAqZZAXF3hdWwCWMcekKupdx_YJ_nDY0JOI3hHixC0zQrZGxL3Z1b95zVsFrEUwOEtX_j01dKk_YvQ_wp30JNwAWlzAmNPME68Z6RA5tYfygBFCtpW7YMdk9cDJmgJmElUBJTCTvAPZz9OaMfaT5YecFiSxCq9x1yVmnQZzWxPF9vK9AftJ1PKJifwbWMbu_js5kTUqThMMNIIyeuIhSGatTbmPOenRIOsi24HOvTrGa5zEX1RKKnwr1xsdwBELVHfu9fFySA4Q_TOfs9eQssWpKtADAudNLKE5e3pALPwy0U6ongPJFvFnqqSy8BCkQ8WBSmzl4jsWq3sVstiwHYcz8GQyfyhZfKZ5sDA=/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo%20de%20Nieve_2007%20W.jpg", "prueba.jpg", mode="wb", method="wget")
download.file("https://8b978dafd7cbb0236a14fd91743be8b624061489.googledrive.com/secure/AHqL5N1nOlt2Gh98PiCXkG35VNI8ZJAuoZXUmESlnDuqkqYkeVmnjzVUg_-TxvbjCjr48-lkguslMGIvajR-WrK7wH1RvRUErtb_VQSXT2mccJHjVK5TjxfMsWrUgrha5bpvmxEKU4001Lwhxjr-ZgSwGFz4KfG-jWEM3GNDsm9SIHHugjzes0l5zwr3Gn5lJZsVzxqc3ptcG_e-2bpVaSLf-CSQyhem32G7BKJmfOWIEX9Dq4PCO4R8BJFod2ie_c05eYinzMyBwJsZ-aAqZZAXF3hdWwCWMcekKupdx_YJ_nDY0JOI3hHixC0zQrZGxL3Z1b95zVsFrEUwOEtX_j01dKk_YvQ_wp30JNwAWlzAmNPME68Z6RA5tYfygBFCtpW7YMdk9cDJmgJmElUBJTCTvAPZz9OaMfaT5YecFiSxCq9x1yVmnQZzWxPF9vK9AftJ1PKJifwbWMbu_js5kTUqThMMNIIyeuIhSGatTbmPOenRIOsi24HOvTrGa5zEX1RKKnwr1xsdwBELVHfu9fFySA4Q_TOfs9eQssWpKtADAudNLKE5e3pALPwy0U6ongPJFvFnqqSy8BCkQ8WBSmzl4jsWq3sVstiwHYcz8GQyfyhZfKZ5sDA=/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo%20de%20Nieve_2007%20W.jpg", "prueba.jpg", method="wget")
install.packages("RGoogleDocs", dep=T)
dl_from_GoogleD <- function(output, key, format) {
## Arguments:
## output = output file name
## key = Google document key
## format = output format (pdf, rtf, doc, txt..)
## Note: File must be shareable!
require(RCurl)
bin <- getBinaryURL(paste0("https://docs.google.com/document/d/", key, "/export?format=", format),
ssl.verifypeer = FALSE)
con <- file(output, open = "wb")
writeBin(bin, con)
close(con)
message(noquote(paste(output, "read into", getwd())))
}
dl_from_GoogleD(output = "dl_test.pdf",
key = "1DdauvkcVm5XtRBkQIv1na8PeLAwpCBdW8pALCFpRWeM",
format = "pdf")
shell.exec("dl_test.pdf")
dl_from_GoogleD(output = "prueba.jpg",
key = "0B7LnjXUZ-4TAYmhNWlcxa2VvX1k",
format = "jpg")
download.file("http://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", method="wget")
download.file("http://googledrive.com/host/0B5yGMNeKDyLdWU5Pd01kYWtLa1k/Pozo de Nieve_2007 W.jpg", "prueba.jpg", method="wget")
download.file("https://drive.google.com/uc?export=download&id=0B7LnjXUZ-4TAYmhNWlcxa2VvX1k", "prueba.jpg", mode="w", method="wget")
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
download.file("https://drive.google.com/uc?export=download&id=0B7LnjXUZ-4TAYmhNWlcxa2VvX1k", "prueba.jpg", mode="w", method="wget")
x=data[25,]
x
x[9]
name <- gsub(" ", "-", tolower(iconv(x[2], to='ASCII//TRANSLIT')))
file.name <- paste("lugares/", name, ".md", sep="")
file.create(file.name)
# Descargar fotos
url.photos <- trimws(unlist(strsplit(gsub("open?", "uc?export=download&", x[,9]), ",")))
url.photos
photos <- NULL
for (i in length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
url <- unlist(strsplit(url.photos[i], ""))
download.file(url.photos[i], photos[i], method="wget", mode="w")
}
photos[1]
url.photos
download.file(url.photos[1], "prueba2.jpg", method="wget", mode="w")
url.photos <- trimws(unlist(strsplit(gsub("open\?", "uc?export=download&", x[,9]), ",")))
url.photos <- trimws(unlist(strsplit(gsub("open\\?", "uc?export=download&", x[,9]), ",")))
photos <- NULL
for (i in length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], method="wget", mode="w")
}
url.photos
for (i in 1:length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], method="wget", mode="w")
}
photos
render.record <- function(x){
# Primero eliminar tildes, espacios y pasar a minuscula
name <- gsub(" ", "-", tolower(iconv(x[2], to='ASCII//TRANSLIT')))
file.name <- paste("lugares/", name, ".md", sep="")
file.create(file.name)
# Descargar fotos
url.photos <- trimws(unlist(strsplit(gsub("open\\?", "uc?export=download&", x[,9]), ",")))
photos <- NULL
for (i in 1:length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], method="wget", mode="w")
}
if (length(photos)==0) banner = photos[1] else banner="img/fondo-azul.png"
yamlheader <- as.yaml(list(layout="page", title=as.character(x[2]), "header-img"=banner, categories=as.character(x[7]), comments=as.character("true")))
write(paste("---\n", yamlheader,"---\n\n", sep=""), file=file.name, append=T)
write(unlist(x[5]), file=file.name, append=T)
write("<div class=\"photos\">", file=file.name, append=T)
apply(photos, function(x) write(paste("<img src=\"", x, "\", alt=\"", x[2], "\">", sep=""), file=filen.name, append=T))
}
render.record(x)
?apply
?lapply
if (length(photos)==0) banner = photos[1] else banner="img/fondo-azul.png"
yamlheader <- as.yaml(list(layout="page", title=as.character(x[2]), "header-img"=banner, categories=as.character(x[7]), comments=as.character("true")))
write(paste("---\n", yamlheader,"---\n\n", sep=""), file=file.name, append=T)
write(unlist(x[5]), file=file.name, append=T)
write("<div class=\"photos\">", file=file.name, append=T)
lapply(photos, function(x) write(paste("<img src=\"", x, "\", alt=\"", x[2], "\">", sep=""), file=filen.name, append=T))
lapply(photos, function(x) write(paste("<img src=\"", x, "\", alt=\"", x[2], "\">", sep=""), file=file.name, append=T))
lapply(photos, function(y) write(paste("<img src=\"", y, "\", alt=\"", x[2], "\">", sep=""), file=file.name, append=T))
render.record <- function(x){
# Primero eliminar tildes, espacios y pasar a minuscula
name <- gsub(" ", "-", tolower(iconv(x[2], to='ASCII//TRANSLIT')))
file.name <- paste("lugares/", name, ".md", sep="")
file.create(file.name)
# Descargar fotos
url.photos <- trimws(unlist(strsplit(gsub("open\\?", "uc?export=download&", x[,9]), ",")))
photos <- NULL
for (i in 1:length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], method="wget", mode="w")
}
if (length(photos)==0) banner = photos[1] else banner="img/fondo-azul.png"
yamlheader <- as.yaml(list(layout="page", title=as.character(x[2]), "header-img"=banner, categories=as.character(x[7]), comments=as.character("true")))
write(paste("---\n", yamlheader,"---\n\n", sep=""), file=file.name, append=T)
write(unlist(x[5]), file=file.name, append=T)
write("\n<div class=\"photos\">", file=file.name, append=T)
lapply(photos, function(y) write(paste("<img src=\"", y, "\", alt=\"", x[2], "\">", sep=""), file=file.name, append=T))
write("</div>", file=file.name, append=T)
}
render.record(x)
render.record <- function(x){
# Primero eliminar tildes, espacios y pasar a minuscula
name <- gsub(" ", "-", tolower(iconv(x[2], to='ASCII//TRANSLIT')))
file.name <- paste("lugares/", name, ".md", sep="")
file.create(file.name)
# Descargar fotos
url.photos <- trimws(unlist(strsplit(gsub("open\\?", "uc?export=download&", x[,9]), ",")))
photos <- NULL
for (i in 1:length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], method="wget", mode="w")
}
if (length(photos)!=0) banner = photos[1] else banner="img/fondo-azul.png"
yamlheader <- as.yaml(list(layout="page", title=as.character(x[2]), "header-img"=banner, categories=as.character(x[7]), comments=as.character("true")))
write(paste("---\n", yamlheader,"---\n\n", sep=""), file=file.name, append=T)
write(unlist(x[5]), file=file.name, append=T)
write("\n<div class=\"photos\">", file=file.name, append=T)
lapply(photos, function(y) write(paste("<img src=\"/", y, "\" alt=\"", x[2], "\">", sep=""), file=file.name, append=T))
write("</div>", file=file.name, append=T)
}
render.record(x)
file.name = "lugares/index.md"
file.create(file.name)
yamlheader <- "---
layout: page
title: รndice de lugares
header-img: img/fondo-azul.png
---\n\n"
write(yamlheader, file=file.name, append=T)
write("## รndice alfabรฉtico\n", file="index.Rmd", append=T)
write(unlist(lapply(data[,2], function(x) paste("- [", x, "](", gsub(" ", "-", tolower(iconv(x, to='ASCII//TRANSLIT'))), "/index.html)\n", sep=""))), file=file.name, append=T)
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F) %>%
arrange("Tรญtulo")
library(dplyr)
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F) %>%
arrange("Tรญtulo")
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data <- data %>% arrange("Tรญtulo")
data %>% arrange("Tรญtulo")
data <- data %>% arrange(Tรญtulo)
source('/media/alf/datos/web/catalogo-patrimonio/generar_catalogo.R', echo=TRUE)
source('/media/alf/datos/web/catalogo-patrimonio/generar_catalogo.R', echo=TRUE)
x = data[1,]
x
render.record(x)
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data <- data %>% arrange(Tรญtulo)
x = data[1,]
render.record(x)
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data <- data %>% arrange(Tรญtulo)
x = data[1,]
x
render.record(x)
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data <- data %>% arrange(Tรญtulo)
x = data[1,]
x[2]
cat(x[2])
unlist(x[2])
url.data <- "https://docs.google.com/spreadsheets/d/1hWyDiPwVU1oUflqVSC6iSveP-NigMpZhh9e7RKXZpJk/pub?output=csv"
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data <- data %>% arrange(Tรญtulo)
x = data[1,]
unlist(x[2])
render.record(x)
name <- gsub(" ", "-", tolower(iconv(x[2], to='ASCII//TRANSLIT')))
name
file.name <- paste("lugares/", name, ".md", sep="")
file.name
file.create(file.name)
# Descargar fotos
url.photos <- trimws(unlist(strsplit(gsub("open\\?", "uc?export=download&", x[,9]), ",")))
photos <- NULL
for (i in 1:length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], method="wget", mode="w")
}
if (length(photos)!=0) banner = photos[1] else banner="img/fondo-azul.png"
yamlheader <- as.yaml(list(layout="page", title=as.character(x[2]), "header-img"=banner, categories=as.character(x[7]), comments=as.character("true")))
write(paste("---\n", yamlheader,"---\n\n", sep=""), file=file.name, append=T)
write(unlist(x[5]), file=file.name, append=T)
write("\n<div class=\"photos\">", file=file.name, append=T)
lapply(photos, function(y) write(paste("<img src=\"/", y, "\" alt=\"", x[2], "\">", sep=""), file=file.name, append=T))
write("</div>", file=file.name, append=T)
return(paste(name, ".md"), sep="")
source('/media/alf/datos/web/catalogo-patrimonio/generar_catalogo.R', echo=TRUE)
x=data[2,]
x
name <- gsub(" ", "-", tolower(iconv(x[2], to='ASCII//TRANSLIT')))
file.name <- paste("lugares/", name, ".md", sep="")
file.create(file.name)
# Descargar fotos
url.photos <- trimws(unlist(strsplit(gsub("open\\?", "uc?export=download&", x[,9]), ",")))
photos <- NULL
url.photos
length(url.photos)
for (i in 1:length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], method="wget", mode="w")
}
name <- gsub(" ", "-", tolower(iconv(x[2], to='ASCII//TRANSLIT')))
file.name <- paste("lugares/", name, ".md", sep="")
file.create(file.name)
# Descargar fotos
url.photos <- trimws(unlist(strsplit(gsub("open\\?", "uc?export=download&", x[,9]), ",")))
photos <- NULL
if (length(url.photos)>0) {
for (i in 1:length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], method="wget", mode="w")
}
banner = photos[1]
}
else{
banner="img/fondo-azul.png"
}
}
if (length(url.photos)>0) {
for (i in 1:length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], method="wget", mode="w")
}
banner = photos[1]
}
else {
if (length(url.photos)>0) {
for (i in 1:length(url.photos)) {
photos[i] <- paste("img/", name, "-", i, ".jpg", sep="")
download.file(url.photos[i], photos[i], method="wget", mode="w")
}
banner = photos[1]
} else {
banner="img/fondo-azul.png"
}
yamlheader <- as.yaml(list(layout="page", title=as.character(x[2]), "header-img"=banner, categories=as.character(x[7]), comments=as.character("true")))
source('/media/alf/datos/web/catalogo-patrimonio/generar_catalogo.R', echo=TRUE)
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data <- data %>% arrange(Tรญtulo)
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data <- data %>% arrange(Tรญtulo)
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data <- data %>% arrange(Tรญtulo)
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data <- data %>% arrange(Tรญtulo)
render.all.records(data)
source('/media/alf/datos/web/catalogo-patrimonio/generar_catalogo.R', echo=TRUE)
