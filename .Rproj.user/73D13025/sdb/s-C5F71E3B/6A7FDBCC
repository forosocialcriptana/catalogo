{
    "collab_server" : "",
    "contents" : "# Script para crear las fichas de ilegtimidad de la PACD\n\n# URL de la hoja de cálculo con los datos\nurl.data <- \"https://docs.google.com/spreadsheets/d/1zda2z0b09o-XUY-RdOWpcKgg-tbgn3d3syDijnKtX4s/pub?gid=176454935&single=true&output=csv\"\nlibrary(RCurl)\nlibrary(rmarkdown)\nlibrary(yaml)\n\n# Librería para la realización de mapas con google maps.\n#library(plotGoogleMaps)\n\noptions(scipen=999)\n\n# Carga de los datos\ndata <- read.csv(text = getURL(url.data, .encoding = \"UTF-8\"), encoding = \"UTF-8\", header = T, stringsAsFactors = F)\nheaders <- gsub(\".\", \" \", names(data), fixed=T)\n\n# Sustitución de comas por cambio de línea en campos de indicios\nfor (i in 7:13){\n  data[,i] <- trimws(gsub(\",\", \"\\n-\", data[,i]), \"l\")\n  data[i] <- sapply(data[i], function(x) ifelse(is.na(x) | x==\"\", \"\", paste(\"-\",x)))\n}\n# Añadir € al campo de Importe\ndata[,6] <- paste(format(data[,6], big.mark=\".\"), \"€\")\n\n# Número de columnas a procesar (las dos últimas no se procesan al tener datos confidenciales)\nn <- ncol(data)-3\n\n#' Title\n#' Función que crea una cadena en formato Rmardown con el contenido de una sección de la ficha.\n#'\n#' @param name Cadena con el encabezado de la sección.\n#' @param field Cadena con el contenido de la sección.\n#'\n#' @return Cadena con una sección de la ficha en formato Rmarkdown.\n#' @export\n#'\n#' @examples\nrender.field <- function(name, field){\n  return(paste(\"## \", name, \"\\n\", field, \"\\n\\n\", sep=\"\"))\n}\n\n#' Title\n#' Función que crea un fichero con el contenido de una ficha en formato Rmarkdown. \n#' El nombre del fichero en formato Rmarkdown se toma del segundo campo que se supone es el título de ficha.\n#' @param x Vector con los encabezados de sección.\n#' @param y Vector con los contenidos de las secciones.\n#'\n#' @return None\n#' @export\n#'\n#' @examples\nrender.record <- function(x, y){\n  file.name <- paste(gsub(\" \", \"-\", y[2]), \".Rmd\", sep=\"\")\n  file.create(file.name)\n  yamlheader <- as.yaml(list(title=as.character(y[2]), date=substr(y[1],1,10)))\n  write(paste(\"---\\n\", yamlheader,\"---\\n\\n\", sep=\"\"), file=file.name, append=T)\n  write(unlist(Map(render.field, x[3:n], y[3:n])), file=file.name, append=T)\n  render_site(file.name)\n}\n\n\n#' Función que genera todas las fichas en formato Rmarkdown.\n#'\n#' @param data Data frame con los registros de las fichas.\n#'\n#' @return None\n#' @export\n#'\n#' @examples\nrender.all.records <- function(data){\n  require(knitr)\n  # Generar el índice\n  file.create(\"index.Rmd\")\n  yamlheader <- \"---\ntitle: Fichas de gastos presuntamente ilegítimos\noutput:\n  html_document:\n    toc: false\n    toc_float: false\n    includes:\n      before_body: doc_prefix_index.html\n---\\n\\n\"\n  write(yamlheader, file=\"index.Rmd\", append=T)\n  write(unlist(lapply(data[,2], function(x) paste(\"- [\", x, \"](\", gsub(\" \", \"-\", x), \".html)\\n\", sep=\"\"))), file=\"index.Rmd\", append=T)\n  write(\"\\n\\n## Mapa de gastos presuntamente ilegítimos\", file=\"index.Rmd\", append=T)\n  cat(\"\\n```{r, echo=FALSE}\nrequire(leaflet)\nm <- leaflet() %>%\n  setView(lng=-3.70453, lat=40.41358, zoom = 12) %>%\n  addTiles()\", file=\"index.Rmd\", append=T)\n  # Función que imprime un marcador para cada ilegitimidad\n  coord <- function (x){\n    co <- unlist(strsplit(x, \",\"))\n    return (paste(\"lng=\", co[2], \", lat=\", co[1], sep=\"\"))\n  }\n  cat(unlist(lapply(data[,ncol(data)], function(x) paste(\" %>%\\n  addMarkers(\", coord(x), \", popup=\\\"\", x, \"\\\")\", sep=\"\"))), file=\"index.Rmd\", append=T)\n  write(\"\\nm\\n```\\n\", file=\"index.Rmd\", append=T)\n  knit(\"index.Rmd\")\n  # Generar las fichas\n  lapply(1:nrow(data), function(i) render.record(headers, data[i,]))\n}\n\nrender.all.records(data)\n\nrender_site()\n\n# Mapa de ilegitimidades\n\n\n\n",
    "created" : 1468254692889.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "657141242",
    "id" : "6A7FDBCC",
    "lastKnownWriteTime" : 1467360037,
    "last_content_update" : 1467360037,
    "path" : "/media/alf/datos/drive/SOCIAL/auditoria deuda/auditoria ayuntamiento madrid/fichas-iletigimidad/generar_fichas.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}